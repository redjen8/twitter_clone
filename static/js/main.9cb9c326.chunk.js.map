{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","require","useState","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigaton","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9cb9c326.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","const { authService } = require(\"fbase\");\r\nconst { useState } = require(\"react\")\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { name, value },\r\n        } = event;\r\n        if(name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n\r\n            if (newAccount) {\r\n                data = await authService.createUserWithEmailAndPassword(\r\n                    email,\r\n                    password\r\n                );\r\n            } else {\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    required\r\n                    value={email}\r\n                    onChange={onChange}\r\n                />\r\n                <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    required\r\n                    value={password}\r\n                    onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n                {error}\r\n            </form>\r\n            <span onClick={toggleAccount}>\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\n\r\nconst Auth = () => {\r\n\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if (name === \"google\") {\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\") {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AuthForm />\r\n            <div>\r\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\r\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;","import { dbService, storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"삭제하시겠습니까?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if (nweetObj.attachmentUrl !== \"\")\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text : newNweet});\r\n        setEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing? (\r\n                <>\r\n                <form onSubmit={onSubmit}>\r\n                    <input onChange={onChange} value={newNweet} required/>\r\n                    <input type=\"submit\" value=\"Update Nweet\"/>\r\n                </form>\r\n                <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <h4>{nweetObj.text}</h4>\r\n                {nweetObj.attachmentUrl && (\r\n                    <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\r\n                )}\r\n                {isOwner && (\r\n                    <>\r\n                    <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                    <button onClick={toggleEditing}>Edit Nweet</button>\r\n                    </>\r\n                )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n            .ref()\r\n            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        event.preventDefault();\r\n        const {\r\n            target : { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\"/>\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;"," import { dbService, storageService } from \"fbase\";\r\n import { useEffect, useState } from \"react\";\r\n import Nweet from \"components/Nweet\";\r\n import { v4 as uuidv4 } from \"uuid\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [nweets, setNweets] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const newArray = snapshot.docs.map((document) => ({\r\n                id: document.id,\r\n                ...document.data(),\r\n            }));\r\n            setNweets(newArray);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <NweetFactory userObj={userObj} />\r\n        <div>\r\n            {nweets.map((nweet) => (\r\n                <Nweet\r\n                key={nweet.id}\r\n                nweetObj={nweet}\r\n                isOwner={nweet.creatorId === userObj.uid}\r\n                />\r\n            ))}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import { authService, dbService } from \"fbase\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const onLogoutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    \r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({displayName: newDisplayName});\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={onSubmit}>\r\n            <input \r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"Display name\"\r\n                value={newDisplayName}\r\n            />\r\n            <input type=\"submit\" value=\"Update Profile\" />\r\n        </form>\r\n        <button onClick={onLogoutClick}>Log Out</button>\r\n        </>\r\n    );   \r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigaton = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li>\r\n                    <Link to = \"/\">Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to = \"/profile\">{userObj.displayName}의 Profile</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigaton;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigaton from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigaton userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <>\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj = {userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile refreshUser={refreshUser} userObj={userObj} />\r\n                    </Route>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path =\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n    {init? <AppRouter\n    refreshUser={refreshUser}\n    isLoggedIn={Boolean(userObj)}\n    userObj={userObj}\n    /> : \"initializing..\"}\n    </>\n  ); \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n"],"sourceRoot":""}